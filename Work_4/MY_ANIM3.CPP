#include "MY_ANIM1.h" // Упражнение 4 и 5 - Абстрактный класс и виртуальный жеструктор
		     // Животные - земноводные: лягушки, тритоны ...
void main(void){
  {
	 clrscr();  // запускать только в режиме отладки goto kursor F4
   // virtual void Speak() и добавим чисто виртуальный инициализатор =0;
   // получится чисто виртуальная функция а класс станет абстрактным
   // отключим так же функцию Spravka1
     { Frog Z("Полоскин "); }
   //  УПРАЖНЕНИЕ  4
   Animal *pA= new Frog;     // объявим указатель на Animal и
			      // = new Frog  &Z
   delete pA;
   cout<<endl;
  }  // До сих пор можно идти по командам отладчика F4, Alt-F8
     // снять задачу  - Ctrl-F2
     // операцией new Triton вызвался его конструктор и всех базовых классов
     // как удалить временный объект Frog - не ясно
     // delete pA  - удаляем указатель pA вызовется деструктор ~Animal
     // а деструкторы ~Zebra ~Solipeds для временного объекта new Zebra
     // не вызываются - происходит утечка памяти
     getchar();
   // УПРАЖНЕНИЕ  5
   // добавили виртуальность деструкторам  - virtual ~Animal()
   // теперь правильно вызываются все деструкторы для тигра
   // программа работает надежно без утечки памяти и не зависает
   // вот так то.
   // Вывод: виртуальные деструкторы полезны
}//==============================================================


